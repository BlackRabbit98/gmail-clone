{"version":3,"sources":["features/userSlice.js","firebase.js","components/Header.js","components/SidebarOption.js","features/mailSlice.js","components/Sidebar.js","components/Mail.js","components/Section.js","components/EmailRow.js","components/EmailList.js","components/SendMail.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useSelector","dispatch","useDispatch","className","IconButton","src","alt","placeholder","type","Avatar","onClick","signOut","then","photoUrl","SidebarOption","Icon","title","number","selected","mailSlice","selectedMail","sendMessageIsOpen","selectMail","openSendMessage","closeSendMessage","selectOpenMail","mail","selectSendMessageIsOpen","Sidebar","Button","startIcon","fontSize","InboxIcon","StarIcon","AccessTimeIcon","LabelImportantIcon","NearMeIcon","NoteIcon","ExpandMoreIcon","Mail","history","useHistory","push","MoveToInbox","CheckCircle","MoreVert","UnfoldMore","ExitToApp","subject","time","description","Section","color","style","borderBottom","EmailRow","id","Checkbox","EmailList","useState","emails","setEmails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","PeopleIcon","LocalOfferIcon","to","message","timestamp","Date","seconds","toUTCString","SendMail","useForm","register","handleSubmit","errors","watch","onSubmit","formData","console","log","add","FieldValue","serverTimestamp","ref","required","variant","Login","signInWithPopup","displayName","email","photoURL","catch","error","alert","App","onAuthStateChanged","path","store","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c9c6e066.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n\tname: 'user',\n\tinitialState: {\n\t\tuser: null,\n\t},\n\n\treducers: {\n\t\tlogin: (state, action) => {\n\t\t\tstate.user = action.payload;\n\t\t},\n\t\tlogout: (state) => {\n\t\t\tstate.user = null;\n\t\t},\n\t},\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: 'AIzaSyDhzu0KcfpmYBz2nNe52g-2xJXO_FjEeA0',\r\n\tauthDomain: 'clone-646ed.firebaseapp.com',\r\n\tprojectId: 'clone-646ed',\r\n\tstorageBucket: 'clone-646ed.appspot.com',\r\n\tmessagingSenderId: '396159549379',\r\n\tappId: '1:396159549379:web:02548bef41e96fe5b08776',\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, auth, provider };\r\n","import React from 'react';\r\nimport './Header.css';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { logout, selectUser } from '../features/userSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { auth } from '../firebase';\r\n\r\nfunction Header() {\r\n\tconst user = useSelector(selectUser);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst signOut = () => {\r\n\t\tauth.signOut().then(() => {\r\n\t\t\tdispatch(logout());\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<div className=\"header_left\">\r\n\t\t\t\t<IconButton>\r\n\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc=\"https://i.pinimg.com/originals/d7/4e/60/d74e6036cb5b6e80d87b0a3fc77176c0.png\"\r\n\t\t\t\t\talt=\"gmail logo\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"header_center\">\r\n\t\t\t\t<SearchIcon />\r\n\t\t\t\t<input placeholder=\"Search mail\" type=\"text\" />\r\n\t\t\t\t<ArrowDropDownIcon className=\"header_inputCaret\" />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"header_right\">\r\n\t\t\t\t<IconButton>\r\n\t\t\t\t\t<AppsIcon />\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t<IconButton>\r\n\t\t\t\t\t<NotificationsIcon />\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t<Avatar onClick={signOut} src={user?.photoUrl} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './SidebarOption.css';\r\n\r\nfunction SidebarOption({ Icon, title, number, selected }) {\r\n\treturn (\r\n\t\t<div className={`sidebarOption ${selected && 'sidebarOption--active'}`}>\r\n\t\t\t<Icon />\r\n\t\t\t<h3>{title}</h3>\r\n\t\t\t<p>{number} </p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SidebarOption;\r\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const mailSlice = createSlice({\n\tname: 'mail',\n\tinitialState: {\n\t\tselectedMail: null,\n\t\tsendMessageIsOpen: false,\n\t},\n\n\treducers: {\n\t\tselectMail: (state, action) => {\n\t\t\tstate.selectedMail = action.payload;\n\t\t},\n\t\topenSendMessage: (state) => {\n\t\t\tstate.sendMessageIsOpen = true;\n\t\t},\n\t\tcloseSendMessage: (state) => {\n\t\t\tstate.sendMessageIsOpen = false;\n\t\t},\n\t},\n});\n\nexport const {\n\tselectMail,\n\topenSendMessage,\n\tcloseSendMessage,\n} = mailSlice.actions;\n\nexport const selectOpenMail = (state) => state.mail.selectedMail;\nexport const selectSendMessageIsOpen = (state) => state.mail.sendMessageIsOpen;\nexport default mailSlice.reducer;\n","import React from 'react';\r\nimport './Sidebar.css';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SidebarOption from './SidebarOption';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport NearMeIcon from '@material-ui/icons/NearMe';\r\nimport NoteIcon from '@material-ui/icons/Note';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport DuoIcon from '@material-ui/icons/Duo';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport { useDispatch } from 'react-redux';\r\nimport { openSendMessage } from '../features/mailSlice';\r\n\r\nfunction Sidebar() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\treturn (\r\n\t\t<div className=\"sidebar\">\r\n\t\t\t<Button\r\n\t\t\t\tstartIcon={<AddIcon fontSize=\"large\" />}\r\n\t\t\t\tclassName=\"sidebar_compose\"\r\n\t\t\t\tonClick={() => dispatch(openSendMessage())}>\r\n\t\t\t\tCompose\r\n\t\t\t</Button>\r\n\r\n\t\t\t<SidebarOption\r\n\t\t\t\tIcon={InboxIcon}\r\n\t\t\t\ttitle=\"Inbox\"\r\n\t\t\t\tnumber={54}\r\n\t\t\t\tselected={true}\r\n\t\t\t/>\r\n\t\t\t<SidebarOption Icon={StarIcon} title=\"Starred\" number={54} />\r\n\t\t\t<SidebarOption Icon={AccessTimeIcon} title=\"Snoozed\" number={54} />\r\n\t\t\t<SidebarOption\r\n\t\t\t\tIcon={LabelImportantIcon}\r\n\t\t\t\ttitle=\"Important\"\r\n\t\t\t\tnumber={54}\r\n\t\t\t/>\r\n\t\t\t<SidebarOption Icon={NearMeIcon} title=\"Sent\" number={54} />\r\n\t\t\t<SidebarOption Icon={NoteIcon} title=\"Drafts\" number={54} />\r\n\t\t\t<SidebarOption Icon={ExpandMoreIcon} title=\"More\" number={54} />\r\n\r\n\t\t\t<div className=\"sidebar_footer\">\r\n\t\t\t\t<div className=\"sidebar_footerIcons\">\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<PersonIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<DuoIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<PhoneIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Sidebar;\r\n","import { IconButton } from '@material-ui/core';\r\nimport {\r\n\tCheckCircle,\r\n\tExitToApp,\r\n\tLabelImportant,\r\n\tMoreVert,\r\n\tMoveToInbox,\r\n\tUnfoldMore,\r\n} from '@material-ui/icons';\r\nimport React from 'react';\r\nimport './Mail.css';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\r\nimport { useHistory } from 'react-router';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectOpenMail } from '../features/mailSlice';\r\n\r\nfunction Mail() {\r\n\tconst history = useHistory();\r\n\tconst selectedMail = useSelector(selectOpenMail);\r\n\r\n\treturn (\r\n\t\t<div className=\"mail\">\r\n\t\t\t<div className=\"mail_tools\">\r\n\t\t\t\t<div className=\"mail_toolsLeft\">\r\n\t\t\t\t\t<IconButton onClick={() => history.push('/')}>\r\n\t\t\t\t\t\t<ArrowBackIcon />\r\n\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<MoveToInbox />\r\n\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<ErrorIcon />\r\n\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<EmailIcon />\r\n\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<WatchLaterIcon />\r\n\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<CheckCircle />\r\n\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<LabelImportant />\r\n\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<MoreVert />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mail_toolsRight\">\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<UnfoldMore />\r\n\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<PrintIcon />\r\n\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<ExitToApp />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"mail_body\">\r\n\t\t\t\t<div className=\"mail_bodyHeader\">\r\n\t\t\t\t\t<h2>{selectedMail?.subject}</h2>\r\n\t\t\t\t\t<LabelImportant className=\"mail_important\" />\r\n\t\t\t\t\t<p>{selectedMail?.title}</p>\r\n\t\t\t\t\t<p className=\"mail_time\">{selectedMail?.time}</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"mail_message\">\r\n\t\t\t\t\t<p>{selectedMail?.description}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Mail;\r\n","import React from 'react';\r\nimport './Section.css';\r\n\r\nexport default function Section({ Icon, title, color, selected }) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`section ${selected && 'section--selected'}`}\r\n\t\t\tstyle={{\r\n\t\t\t\tborderBottom: `3px solid ${color}`,\r\n\t\t\t\tcolor: `${selected && color}`,\r\n\t\t\t}}>\r\n\t\t\t<Icon />\r\n\t\t\t<h4>{title}</h4>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { Checkbox, IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport './EmailRow.css';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport { useHistory } from 'react-router';\r\nimport { selectMail } from '../features/mailSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction EmailRow({ id, title, subject, description, time }) {\r\n\tconst history = useHistory();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst openMail = () => {\r\n\t\tdispatch(\r\n\t\t\tselectMail({\r\n\t\t\t\tid,\r\n\t\t\t\ttitle,\r\n\t\t\t\tsubject,\r\n\t\t\t\tdescription,\r\n\t\t\t\ttime,\r\n\t\t\t})\r\n\t\t);\r\n\t\thistory.push('/mail');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div onClick={openMail} className=\"emailRow\">\r\n\t\t\t<div className=\"emailRow_options\">\r\n\t\t\t\t<Checkbox />\r\n\t\t\t\t<IconButton>\r\n\t\t\t\t\t<StarBorderIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton>\r\n\t\t\t\t\t<LabelImportantIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t\t<h3 className=\"emailRow_title\">{title}</h3>\r\n\t\t\t<div className=\"emailRow_message\">\r\n\t\t\t\t<h4>\r\n\t\t\t\t\t{subject}{' '}\r\n\t\t\t\t\t<span className=\"emailRow_description\">{description}</span>\r\n\t\t\t\t</h4>\r\n\t\t\t</div>\r\n\t\t\t<p className=\"emailRow_time\">{time}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default EmailRow;\r\n","import { Checkbox, IconButton } from '@material-ui/core';\r\nimport './EmailList.css';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Section from './Section';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport EmailRow from './EmailRow';\r\nimport { useEffect, useState } from 'react';\r\nimport { db } from '../firebase';\r\n\r\nfunction EmailList() {\r\n\tconst [emails, setEmails] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdb.collection('emails')\r\n\t\t\t.orderBy('timestamp', 'desc')\r\n\t\t\t.onSnapshot((snapshot) =>\r\n\t\t\t\tsetEmails(\r\n\t\t\t\t\tsnapshot.docs.map((doc) => ({\r\n\t\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t\tdata: doc.data(),\r\n\t\t\t\t\t}))\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"emailList\">\r\n\t\t\t<div className=\"emailList_settings\">\r\n\t\t\t\t<div className=\"emailList_settingsLeft\">\r\n\t\t\t\t\t<Checkbox />\r\n\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<ArrowDropDownIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<RedoIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<MoreVertIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"emailList_settingsRight\">\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<ChevronLeftIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<ChevronRightIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<KeyboardHideIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton>\r\n\t\t\t\t\t\t<SettingsIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"emailList_sections\">\r\n\t\t\t\t<Section\r\n\t\t\t\t\tIcon={InboxIcon}\r\n\t\t\t\t\ttitle=\"Primary\"\r\n\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\tselected\r\n\t\t\t\t/>\r\n\t\t\t\t<Section Icon={PeopleIcon} title=\"Social\" color=\"#1A73E8\" />\r\n\t\t\t\t<Section\r\n\t\t\t\t\tIcon={LocalOfferIcon}\r\n\t\t\t\t\ttitle=\"Promotions\"\r\n\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"emailList_list\">\r\n\t\t\t\t{emails.map(\r\n\t\t\t\t\t({ id, data: { to, subject, message, timestamp } }) => (\r\n\t\t\t\t\t\t<EmailRow\r\n\t\t\t\t\t\t\tid={id}\r\n\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\ttitle={to}\r\n\t\t\t\t\t\t\tsubject={subject}\r\n\t\t\t\t\t\t\tdescription={message}\r\n\t\t\t\t\t\t\ttime={new Date(\r\n\t\t\t\t\t\t\t\ttimestamp?.seconds * 1000\r\n\t\t\t\t\t\t\t).toUTCString()}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t\t<EmailRow\r\n\t\t\t\t\ttitle=\"Title\"\r\n\t\t\t\t\tsubject=\"this is subject!!!\"\r\n\t\t\t\t\tdescription=\"This is a test\"\r\n\t\t\t\t\ttime=\"10pm\"\r\n\t\t\t\t/>\r\n\t\t\t\t<EmailRow\r\n\t\t\t\t\ttitle=\"Twitch\"\r\n\t\t\t\t\tsubject=\"Hey fellow streamer!!!\"\r\n\t\t\t\t\tdescription=\"This is a test\"\r\n\t\t\t\t\ttime=\"10pm\"\r\n\t\t\t\t/>\r\n\t\t\t\t<EmailRow\r\n\t\t\t\t\ttitle=\"Title\"\r\n\t\t\t\t\tsubject=\"this is subject!!!\"\r\n\t\t\t\t\tdescription=\"This is a test\"\r\n\t\t\t\t\ttime=\"10pm\"\r\n\t\t\t\t/>\r\n\t\t\t\t<EmailRow\r\n\t\t\t\t\ttitle=\"Twitch\"\r\n\t\t\t\t\tsubject=\"Hey fellow streamer!!!\"\r\n\t\t\t\t\tdescription=\"This is a test\"\r\n\t\t\t\t\ttime=\"10pm\"\r\n\t\t\t\t/>\r\n\t\t\t\t<EmailRow\r\n\t\t\t\t\ttitle=\"Title\"\r\n\t\t\t\t\tsubject=\"this is subject!!!\"\r\n\t\t\t\t\tdescription=\"This is a test\"\r\n\t\t\t\t\ttime=\"10pm\"\r\n\t\t\t\t/>\r\n\t\t\t\t<EmailRow\r\n\t\t\t\t\ttitle=\"Twitch\"\r\n\t\t\t\t\tsubject=\"Hey fellow streamer!!!\"\r\n\t\t\t\t\tdescription=\"This is a test\"\r\n\t\t\t\t\ttime=\"10pm\"\r\n\t\t\t\t/>\r\n\t\t\t\t<EmailRow\r\n\t\t\t\t\ttitle=\"Title\"\r\n\t\t\t\t\tsubject=\"this is subject!!!\"\r\n\t\t\t\t\tdescription=\"This is a test\"\r\n\t\t\t\t\ttime=\"10pm\"\r\n\t\t\t\t/>\r\n\t\t\t\t<EmailRow\r\n\t\t\t\t\ttitle=\"Twitch\"\r\n\t\t\t\t\tsubject=\"Hey fellow streamer!!!\"\r\n\t\t\t\t\tdescription=\"This is a test\"\r\n\t\t\t\t\ttime=\"10pm\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default EmailList;\r\n","import React from 'react';\r\nimport './SendMail.css';\r\nimport { Button } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport Close from '@material-ui/icons/Close';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeSendMessage } from '../features/mailSlice';\r\nimport firebase from 'firebase';\r\nimport { db } from '../firebase';\r\n\r\nfunction SendMail() {\r\n\tconst { register, handleSubmit, watch, errors } = useForm();\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onSubmit = (formData) => {\r\n\t\tconsole.log(formData);\r\n\t\tdb.collection('emails').add({\r\n\t\t\tto: formData.to,\r\n\t\t\tsubject: formData.subject,\r\n\t\t\tmessage: formData.message,\r\n\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n\t\t});\r\n\t\tdispatch(closeSendMessage());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"sendMail\">\r\n\t\t\t<div className=\"sendMail_header\">\r\n\t\t\t\t<h3>New Message</h3>\r\n\t\t\t\t<Close\r\n\t\t\t\t\tonClick={() => dispatch(closeSendMessage())}\r\n\t\t\t\t\tclassName=\"sendMail_close\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"to\"\r\n\t\t\t\t\tplaceholder=\"To\"\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t/>\r\n\t\t\t\t{errors.to && (\r\n\t\t\t\t\t<p className=\"sendMail_error\"> To is Required!</p>\r\n\t\t\t\t)}\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"subject\"\r\n\t\t\t\t\tplaceholder=\"Subject\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t/>\r\n\t\t\t\t{errors.subject && (\r\n\t\t\t\t\t<p className=\"sendMail_error\"> Subject is Required!</p>\r\n\t\t\t\t)}\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\tplaceholder=\"Message...\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"sendMail_message\"\r\n\t\t\t\t\tref={register({ required: true })}\r\n\t\t\t\t/>\r\n\t\t\t\t{errors.message && (\r\n\t\t\t\t\t<p className=\"sendMail_error\"> Message is Required!</p>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className=\"sendMail_options\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"sendMail_send\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\ttype=\"submit\">\r\n\t\t\t\t\t\tSend\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SendMail;\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from './features/userSlice';\r\nimport { auth, provider } from './firebase';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst signIn = () => {\r\n\t\tauth.signInWithPopup(provider)\r\n\t\t\t.then(({ user }) => {\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tlogin({\r\n\t\t\t\t\t\tdisplayName: user.displayName,\r\n\t\t\t\t\t\temail: user.email,\r\n\t\t\t\t\t\tphotoUrl: user.photoURL,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t\t.catch((error) => alert(error.message));\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"login\">\r\n\t\t\t<div className=\"login_container\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc=\"https://static.dezeen.com/uploads/2020/10/gmail-google-logo-rebrand-workspace-design_dezeen_2364_col_0.jpg\"\r\n\t\t\t\t\talt=\"gmail logo\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={signIn}>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Mail from './components/Mail';\nimport EmailList from './components/EmailList';\nimport SendMail from './components/SendMail';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSendMessageIsOpen } from './features/mailSlice';\nimport { login, selectUser } from './features/userSlice';\nimport Login from './Login';\nimport { auth } from './firebase';\n\nfunction App() {\n\tconst sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\n\tconst user = useSelector(selectUser);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tauth.onAuthStateChanged((user) => {\n\t\t\tif (user) {\n\t\t\t\t//the user is logged in\n\t\t\t\tdispatch(\n\t\t\t\t\tlogin({\n\t\t\t\t\t\tdisplayName: user.displayName,\n\t\t\t\t\t\temail: user.email,\n\t\t\t\t\t\tphotoUrl: user.photoURL,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}, [dispatch]);\n\n\treturn (\n\t\t<Router>\n\t\t\t{!user ? (\n\t\t\t\t<Login />\n\t\t\t) : (\n\t\t\t\t<div className=\"app\">\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<div className=\"app_body\">\n\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/mail\">\n\t\t\t\t\t\t\t\t<Mail />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t\t\t<EmailList />\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t\t{sendMessageIsOpen && <SendMail />}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport mailReducer from '../features/mailSlice';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n\treducer: {\n\t\tmail: mailReducer,\n\t\tuser: userReducer,\n\t},\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}